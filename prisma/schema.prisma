// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  username      String
  email         String?    @unique
  password      String?
  phone         String?    @unique
  avatar        String?
  address       String?
  postaddress   String?
  detailaddress String?
  created_at    DateTime   @default(now())
  updated_at    DateTime   @default(now())
  SMSToken      SMSToken[]
  Product       Product[]
  Cart          Cart[]
}

model SMSToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int

  @@index([userId])
}

model Product {
  id          Int          @id @default(autoincrement())
  title       String
  price       Float
  photo       String
  description String
  category    String
  discount    String?
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  slideimages slideImage[]

  productoption productOption[]
  cart          Cart[]

  @@index([userId])
}

model productOption {
  id Int @id @default(autoincrement())

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  quantity     Int
  color        String?
  plusdiscount Int
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  cart         Cart[]

  @@index([productId])
}

model slideImage {
  id        Int      @id @default(autoincrement())
  src       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  @@index([productId])
}

model Cart {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  productOption   productOption? @relation(fields: [productOptionId], references: [id], onDelete: Cascade)
  productOptionId Int

  quantity  Int
  orderstat String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
  @@index([userId])
  @@index([productOptionId])
}
